version: 0.2

env:
  parameter-store:
    PARAMETER: "prodtestpara"

phases:
  install:
    commands:
      #- apt-get update
      #- apt-get install jq
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export ACCOUNT=$(echo $CODEBUILD_BUILD_ARN |cut -f5 -d:)
      #- PARAMETER=$(aws ssm get-parameter --name prodtestpara --with-decryption | jq -r '.[] | .Value')
      #- echo "$PARAMETER"
      # - export $PARAMETER
      - echo '***** This is the current env:'
      - printenv
      #- echo '***** Download nodejs repo:'
      #- curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
      #- echo '***** install nodejs:'
      # - apt-get install -y nodejs build-essential
      # - echo '***** install our npms:'
      # - npm install npm
      # - npm install dotenv

  build:
    commands:
      - echo '***** This is the current env:'
      - printenv
      #- echo '***** run tests:'
      #- npm test -- > testresult.txt
      # - docker build -t myimage .
  post_build:
    commands:
      - printf '[{"name":"example-backend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $IMAGE_TAG > code_hash.txt
      #- echo "$IMAGE_TAG\\n$PARAMETER" > code_hash.txt
      - echo $PARAMETER > .env
      # - echo '***** This is the current env:'
      # - printenv
      # - docker pull anchore/cli
      # - docker run -d -v $(pwd):/source-dir -v /var/run/docker.sock:/var/run/docker.sock --name anchore anchore/cli:latest
      # - docker exec anchore anchore feeds sync
      # - docker exec anchore anchore analyze --image myimage --dockerfile /source-dir/Dockerfile

artifacts:
  files:
    - '**/*'
